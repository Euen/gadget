[
 { mnesia,
   [
    {dir, "db"},
    {debug, true}
   ]
 },
 {
   sumo_db,
   [
    {wpool_opts, [{overrun_warning, 100}]},
    {log_queries, true},
    {query_timeout, 30000},
    {storage_backends, []},
    {stores,
     [{gadget_store_mnesia,
       sumo_store_mnesia,
       [{workers, 10},
        {disc_copies, here}
       ]
      }
     ]
    },
    {docs,
     [
      {gadget_repo_tools, gadget_store_mnesia},
      {gadget_logs, gadget_store_mnesia},
      {gadget_repos, gadget_store_mnesia},
      {gadget_users, gadget_store_mnesia},
      {gadget_repo_hooks, gadget_store_mnesia}
     ]
    },
    {events, []}
   ]
 },
 {
   gadget,
   [
    {sdk_path, "/usr/local/android-sdk-linux"},
    %% OAuth
    {github_scope, "repo,repo:status,read:org"},
    {github_client_id, "bcn98345nv2098682c69"},
    {github_client_secret, "98vb98nbsbfgdjdlh87s986s08724958nfgdv"},
    {status_details_url, "http://gadget-internal.inakalabs.com/webhook/status-details/"},
    %% Webhooks
    {webhooks,
      %% Make sure to capitalize the values for the languages list
      #{elvis     => #{url => "http://gadget-internal.inakalabs.com/webhook/elvis",
                       languages => [<<"Erlang">>]},
        compiler  => #{url => "http://gadget-internal.inakalabs.com/webhook/compiler",
                       languages => [<<"Erlang">>]},
        xref      => #{url => "http://gadget-internal.inakalabs.com/webhook/xref",
                       languages => [<<"Erlang">>]},
        dialyzer  => #{url => "http://gadget-internal.inakalabs.com/webhook/dialyzer",
                       languages => [<<"Erlang">>]},
        lewis     => #{url => "http://gadget-internal.inakalabs.com/webhook/lewis",
                       languages => [<<"Java">>]}
       }
    },
    {pr_actions, [<<"opened">>, <<"reopened">>, <<"synchronize">>]},
    {valid_organizations, [<<"inaka">>, <<"nanoscopia">>, <<"esl">>]},
    %% Basic Auth
    {github_user, "github-user"},
    {github_password, "github-password"},
    {android_sdk_path, "/Users/gadget/Library/Android/sdk/"},
    {android_ndk_path, "/Users/gadget/Library/Android/sdk/ndk-bundle"}
   ]
 },
 {
   elvis,
   [
    {config,
     [#{dirs => ["src"],
        filter => "*.erl",
        rules => [{elvis_style, line_length, #{limit => 80,
                                               skip_comments => false}},
                  {elvis_style, no_tabs},
                  {elvis_style, no_trailing_whitespace},
                  {elvis_style, macro_names},
                  {elvis_style, macro_module_names},
                  {elvis_style, operator_spaces, #{rules => [{right, ","},
                                                             {right, "++"},
                                                             {left, "++"}]}},
                  {elvis_style, nesting_level, #{level => 3}},
                  {elvis_style, god_modules, #{limit => 25}},
                  {elvis_style, no_if_expression},
                  {elvis_style, invalid_dynamic_call, #{ignore => [elvis]}},
                  {elvis_style, used_ignored_variable},
                  {elvis_style, no_behavior_info},
                  {
                    elvis_style,
                    module_naming_convention,
                    #{regex => "^([a-z][a-z0-9]*_?)*(_SUITE)?$",
                      ignore => []}
                  },
                  {elvis_style, state_record_and_type},
                  {elvis_style, no_spec_with_records}
                 ]
       },
      #{dirs => ["."],
        filter => "Makefile",
        rules => [{elvis_project, no_deps_master_erlang_mk, #{ignore => []}},
                  {elvis_project, git_for_deps_erlang_mk, #{ignore => []}}]
       },
      #{dirs => ["."],
        filter => "rebar.config",
        rules => [{elvis_project, no_deps_master_rebar, #{ignore => []}},
                  {elvis_project, git_for_deps_rebar, #{ignore => []}}]
       },
      #{dirs => ["."],
        filter => "elvis.config",
        rules => [{elvis_project, old_configuration_format}]
       }
     ]
    }
   ]
 },
 {
   cowboy,
   [
    {http_port, 8080},
    {http_host, "localhost"},
    {http_listener_count, 10}
   ]
 },
 {
   lager,
   [
    {colored, true},
    {async_threshold, 200},
    {async_threshold_window, 5},
    {error_logger_hwm, 500},
    {handlers,
     [
      {lager_console_backend,
       [debug,
        {lager_default_formatter,
         [
          color, time, " [", severity, "]",
          " [", {module, ""}, ":", {function, ""}, ":", {line, ""}, "] ",
          message, "\e[0m\n"
         ]
        }
       ]
      }
     ]
    }
   ]
 }
].
